{"ast":null,"code":"var _jsxFileName = \"/home/eng-hadeer/Desktop/React/wikiSearch/src/components/ButtonGroup.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonGroup = ({\n  children\n}) => {\n  console.log(children, \"childrens\");\n  // const calBackFun = (e)=>{\n  //     console.log(e)\n  // }\n  // const [clonedElements,setClonedElements] = useState([])\n  //     children.map((el)=>{\n  //         const text = el.props.children + \"?\";\n  //   const cloneElement = React.cloneElement(el, {\n  //     color: \"red\",\n  //     customClass: \"group\",\n  //     calBackFun\n  //   },text);\n  //   setClonedElements((prev) => [...prev, cloneElement]);\n  //     })\n  // const newClonedElements = children.map((el,index) => {\n  //     const text = el.props.children + \"?\";\n  //     return React.cloneElement(el, {\n  //         key:index,\n  //       color: \"red\",\n  //       customClass: \"group\",\n  //       calBackFun,\n  //     }, text);\n  //   });\n  const newClonedElements = React.Children.map(children, (el, index) => {\n    const text = el.props.children + \"?\";\n    const {\n      calBackFun\n    } = el.props;\n    return /*#__PURE__*/React.cloneElement(el, {\n      key: index,\n      color: \"red\",\n      customClass: \"group\",\n      calBackFun\n    }, text);\n  });\n\n  // Update state with cloned elements\n  //   setClonedElements(newClonedElements);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newClonedElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ButtonGroup","children","console","log","newClonedElements","Children","map","el","index","text","props","calBackFun","cloneElement","key","color","customClass","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eng-hadeer/Desktop/React/wikiSearch/src/components/ButtonGroup.js"],"sourcesContent":["import React, { useState } from \"react\";\nconst ButtonGroup = ({ children }) => {\n    console.log(children,\"childrens\")\n    // const calBackFun = (e)=>{\n    //     console.log(e)\n    // }\n    // const [clonedElements,setClonedElements] = useState([])\n//     children.map((el)=>{\n//         const text = el.props.children + \"?\";\n//   const cloneElement = React.cloneElement(el, {\n//     color: \"red\",\n//     customClass: \"group\",\n//     calBackFun\n//   },text);\n//   setClonedElements((prev) => [...prev, cloneElement]);\n//     })\n// const newClonedElements = children.map((el,index) => {\n//     const text = el.props.children + \"?\";\n//     return React.cloneElement(el, {\n//         key:index,\n//       color: \"red\",\n//       customClass: \"group\",\n//       calBackFun,\n//     }, text);\n//   });\nconst newClonedElements = React.Children.map(children,(el,index)=>{\n    const text = el.props.children + \"?\";\n    const {calBackFun} = el.props\n\n    return React.cloneElement(el, {\n                key:index,\n              color: \"red\",\n              customClass: \"group\",\n              calBackFun,\n            }, text);\n          });\n\n\n  // Update state with cloned elements\n//   setClonedElements(newClonedElements);\n  \n  return (\n    <>\n      <div>{newClonedElements}</div>\n    </>\n  );\n};\nexport default ButtonGroup;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClCC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,WAAW,CAAC;EACjC;EACA;EACA;EACA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMG,iBAAiB,GAAGV,KAAK,CAACW,QAAQ,CAACC,GAAG,CAACL,QAAQ,EAAC,CAACM,EAAE,EAACC,KAAK,KAAG;IAC9D,MAAMC,IAAI,GAAGF,EAAE,CAACG,KAAK,CAACT,QAAQ,GAAG,GAAG;IACpC,MAAM;MAACU;IAAU,CAAC,GAAGJ,EAAE,CAACG,KAAK;IAE7B,oBAAOhB,KAAK,CAACkB,YAAY,CAACL,EAAE,EAAE;MAClBM,GAAG,EAACL,KAAK;MACXM,KAAK,EAAE,KAAK;MACZC,WAAW,EAAE,OAAO;MACpBJ;IACF,CAAC,EAAEF,IAAI,CAAC;EACV,CAAC,CAAC;;EAGV;EACF;;EAEE,oBACEZ,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA;MAAAI,QAAA,EAAMG;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAC9B,CAAC;AAEP,CAAC;AAACC,EAAA,GA7CIpB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}