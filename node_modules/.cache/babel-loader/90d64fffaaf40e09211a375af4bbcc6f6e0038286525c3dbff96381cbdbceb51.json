{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RedFoxes 2\\\\Desktop\\\\react folder\\\\wikiSearch\\\\src\\\\components\\\\ButtonGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonGroup = ({\n  children\n}) => {\n  _s();\n  console.log(children, \"childrens\");\n  const calBackFun = () => {\n    console.log('call back function clicked');\n  };\n  const [clonedElements, setClonedElements] = useState([]);\n  children.map(el => {\n    const text = el.props.children + \"?\";\n    const cloneElement = /*#__PURE__*/React.cloneElement(el, {\n      color: \"red\",\n      customClass: \"group\",\n      calBackFun\n    }, text);\n    setClonedElements(prev => [...prev, cloneElement]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clonedElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ButtonGroup, \"XmZvHIVAoW3v0SeH4lKIPZuxLWc=\");\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ButtonGroup","children","_s","console","log","calBackFun","clonedElements","setClonedElements","map","el","text","props","cloneElement","color","customClass","prev","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RedFoxes 2/Desktop/react folder/wikiSearch/src/components/ButtonGroup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nconst ButtonGroup = ({ children }) => {\r\n    console.log(children,\"childrens\")\r\n    const calBackFun = ()=>{\r\n        console.log('call back function clicked')\r\n    }\r\n    const [clonedElements,setClonedElements] = useState([])\r\n    children.map((el)=>{\r\n        const text = el.props.children + \"?\";\r\n  const cloneElement = React.cloneElement(el, {\r\n    color: \"red\",\r\n    customClass: \"group\",\r\n    calBackFun\r\n  },text);\r\n  setClonedElements((prev) => [...prev, cloneElement]);\r\n    })\r\n  \r\n  return (\r\n    <>\r\n      <div>{clonedElements}</div>\r\n    </>\r\n  );\r\n};\r\nexport default ButtonGroup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClCC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAC,WAAW,CAAC;EACjC,MAAMI,UAAU,GAAGA,CAAA,KAAI;IACnBF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC7C,CAAC;EACD,MAAM,CAACE,cAAc,EAACC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACvDM,QAAQ,CAACO,GAAG,CAAEC,EAAE,IAAG;IACf,MAAMC,IAAI,GAAGD,EAAE,CAACE,KAAK,CAACV,QAAQ,GAAG,GAAG;IAC1C,MAAMW,YAAY,gBAAGlB,KAAK,CAACkB,YAAY,CAACH,EAAE,EAAE;MAC1CI,KAAK,EAAE,KAAK;MACZC,WAAW,EAAE,OAAO;MACpBT;IACF,CAAC,EAACK,IAAI,CAAC;IACPH,iBAAiB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,YAAY,CAAC,CAAC;EAClD,CAAC,CAAC;EAEJ,oBACEf,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA;MAAAI,QAAA,EAAMK;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAC3B,CAAC;AAEP,CAAC;AAACjB,EAAA,CArBIF,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}